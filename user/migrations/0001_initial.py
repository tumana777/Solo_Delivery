# Generated by Django 5.1.4 on 2024-12-11 15:57

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name_ka', models.CharField(max_length=30, verbose_name='სახელი(ქართულად)')),
                ('last_name_ka', models.CharField(max_length=50, verbose_name='გვარი(ქართულად)')),
                ('first_name_en', models.CharField(max_length=30, verbose_name='სახელი(ლათინურად)')),
                ('last_name_en', models.CharField(max_length=50, verbose_name='გვარი(ლათინურად)')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='ელ.ფოსტა')),
                ('personal_ID', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'არასწორი პირადი ნომერი')], verbose_name='პირადი ნომერი')),
                ('address', models.CharField(max_length=255, verbose_name='მისამართი')),
                ('phone_number', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'არასწორი მობილურის ნომერი')], verbose_name='მობილურის ნომერი')),
                ('room_number', models.CharField(editable=False, max_length=10, unique=True, verbose_name='ოთახის ნომერი')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.branch', verbose_name='ფილიალი')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
